{"ast":null,"code":"var _jsxFileName = \"/Users/yilmaz/WebstormProjects/onething/src/contexts/auth0-context.js\";\nimport React, { Component, createContext, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js'; // create the context\n\nexport const Auth0Context = createContext();\nexport const useAuth0 = () => useContext(Auth0Context); // create a provider\n\nexport class Auth0Provider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      auth0Client: null,\n      isLoading: true,\n      isAuthenticated: false,\n      user: null\n    };\n    this.config = {\n      domain: 'dev-mp2cenf2.eu.auth0.com',\n      client_id: 'iIpSawEdhWh6m9nH1xIdNaWEc5W8Wt8y',\n      redirect_uri: 'https://www.moodio.xyz/homescreen'\n    };\n\n    this.initializeAuth0 = async () => {\n      const auth0Client = await createAuth0Client(this.config);\n      this.setState({\n        auth0Client\n      }); // check to see if they have been redirected after login\n\n      if (window.location.search.includes('code=')) {\n        return this.handleRedirectCallback();\n      }\n\n      const isAuthenticated = await auth0Client.isAuthenticated();\n      const user = isAuthenticated ? await auth0Client.getUser() : null;\n      this.setState({\n        isLoading: false,\n        isAuthenticated,\n        user\n      });\n    };\n\n    this.handleRedirectCallback = async () => {\n      this.setState({\n        isLoading: true\n      });\n      await this.state.auth0Client.handleRedirectCallback();\n      const user = await this.state.auth0Client.getUser();\n      this.setState({\n        user,\n        isAuthenticated: true,\n        isLoading: false\n      });\n      window.history.replaceState({}, document.title, window.location.pathname);\n    };\n  }\n\n  componentDidMount() {\n    this.initializeAuth0();\n  } // initialize the auth0 library\n\n\n  render() {\n    const {\n      auth0Client,\n      isLoading,\n      isAuthenticated,\n      user\n    } = this.state;\n    const {\n      children\n    } = this.props;\n    const configObject = {\n      isLoading,\n      isAuthenticated,\n      user,\n      loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n      getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n      getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n      logout: (...p) => auth0Client.logout(...p)\n    };\n    return React.createElement(Auth0Context.Provider, {\n      value: configObject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, children);\n  }\n\n}","map":{"version":3,"sources":["/Users/yilmaz/WebstormProjects/onething/src/contexts/auth0-context.js"],"names":["React","Component","createContext","useContext","createAuth0Client","Auth0Context","useAuth0","Auth0Provider","state","auth0Client","isLoading","isAuthenticated","user","config","domain","client_id","redirect_uri","initializeAuth0","setState","window","location","search","includes","handleRedirectCallback","getUser","history","replaceState","document","title","pathname","componentDidMount","render","children","props","configObject","loginWithRedirect","p","getTokenSilently","getIdTokenClaims","logout"],"mappings":"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","sourcesContent":["import React, { Component, createContext, useContext } from 'react';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\n// create the context\nexport const Auth0Context = createContext();\nexport const useAuth0 = () => useContext(Auth0Context);\n\n// create a provider\nexport class Auth0Provider extends Component {\n    state = {\n        auth0Client: null,\n        isLoading: true,\n        isAuthenticated: false,\n        user: null\n    };\n    config = {\n        domain: 'dev-mp2cenf2.eu.auth0.com',\n        client_id: 'iIpSawEdhWh6m9nH1xIdNaWEc5W8Wt8y',\n        redirect_uri: 'https://www.moodio.xyz/homescreen'\n    };\n\n    componentDidMount() {\n        this.initializeAuth0();\n    }\n\n    // initialize the auth0 library\n    initializeAuth0 = async () => {\n        const auth0Client = await createAuth0Client(this.config);\n        this.setState({ auth0Client });\n\n        // check to see if they have been redirected after login\n        if (window.location.search.includes('code=')) {\n            return this.handleRedirectCallback();\n        }\n\n        const isAuthenticated = await auth0Client.isAuthenticated();\n        const user = isAuthenticated ? await auth0Client.getUser() : null;\n        this.setState({ isLoading: false, isAuthenticated, user });\n    };\n\n    handleRedirectCallback = async () => {\n        this.setState({ isLoading: true });\n\n        await this.state.auth0Client.handleRedirectCallback();\n        const user = await this.state.auth0Client.getUser();\n\n        this.setState({ user, isAuthenticated: true, isLoading: false });\n        window.history.replaceState({}, document.title, window.location.pathname);\n    };\n\n    render() {\n        const { auth0Client, isLoading, isAuthenticated, user } = this.state;\n        const { children } = this.props;\n\n        const configObject = {\n            isLoading,\n            isAuthenticated,\n            user,\n            loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n            getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n            getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n            logout: (...p) => auth0Client.logout(...p)\n        };\n\n        return (\n            <Auth0Context.Provider value={configObject}>{children}</Auth0Context.Provider>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}